@use '@angular/material' as mat;
@use 'space';

$height: 64px;

:host {
  display: grid;
  gap: space.$md;
  grid-template-rows: 1fr auto;
}

.empty {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  border-radius: space.$xs;
  background-color: var(--surface);
  outline: dashed 1px var(--outline);
  outline-offset: calc(-1 * space.$sm);
}

ul {
  display: flex;
  overflow-x: auto;
  padding: 0;
  margin: 0;
  li {
    flex-shrink: 0;
    list-style: none;
    &:not(:last-of-type) {
      margin-right: space.$md;
    }
  }

  li.add {
    position: sticky;
    left: 0;
    z-index: 1;
    button {
      min-width: $height;
      width: $height;
      height: $height;
      display: flex;
      align-items: center;
      justify-content: center;
      border: 1px dashed var(--divider);
      border-radius: space.$xs;
      background-color: var(--surface);
    }
  }

  li.img-container {
    position: relative;
    button.remove {
      position: absolute;
      top: 1px;
      right: 1px;
      border-radius: space.$xs;
      border: 1px solid var(--divider);
      mat-icon {
        width: space.$md;
        height: space.$md;
        font-size: space.$md;
      }
    }
    button.select-img {
      height: $height;
      border-radius: space.$xs;
      overflow: hidden;
      border: none;
      padding: 0;
    }
    img {
      height: 100%;
    }
  
    &.selected button.select-img {
      border: solid 1px var(--accent);
      @include mat.elevation(2);
    }
  }
}

button {
  cursor: pointer;
}



img-upload {
  width: 100%;
  height: 200px;
  min-height: 200px; // We need min-height on smartphone for some reason
}


.cropping {
  height: 100%;
  display: flex;
  flex-direction: column;
  image-cropper {
    flex: 1;
  }
  footer {
    padding: space.$sm;
    display: flex;
    justify-content: center;
    align-items: center;
    button:first-child {
      margin-right: space.$sm;
    }
  }
}

::-webkit-scrollbar {
  height: space.$sm;
}
